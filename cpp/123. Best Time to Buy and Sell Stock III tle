class Solution {
public:
    int maxProfit(vector<int>& prices) {
        //vector<int> ret(prices.size(),0);
        int ret=subMaxProfit(prices);
        for(int i=0;i<prices.size();i++){
            vector<int> p1(prices.begin(),prices.begin()+i);
            vector<int> p2(prices.begin()+i,prices.end());
            ret=max(ret,subMaxProfit(p1)+subMaxProfit(p2));
            //ret=max(ret,subMaxProfit(vector<int>(prices.begin(),
            //prices.begin()+i))+vector<int>(prices.begin()+i+1,prices.end()) );
        }
        return ret;
    }
    
    
    int subMaxProfit(vector<int>& prices) {
        if(prices.empty()) return 0;
        int ret=0;
        int cur=prices[0];
        for(int i=1;i<prices.size();i++){
            cur=min(cur,prices[i]);
            ret=max(ret,prices[i]-cur);
        }
        return ret;
    }
};
